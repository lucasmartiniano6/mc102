from decimal import Decimal, getcontext
import recipes_decimal

getcontext().prec = 36

def zeta(s):
    resultado = Decimal('0.')
    for n in range(1, 101):
        resultado += Decimal('1.')/(Decimal(n)**s)
    return resultado

def calcular(a,b,c,d,x):
    PI = recipes_decimal.pi()
    numer = PI + a*x.exp() - zeta(b*x+PI)
    pot = -((c*x).sqrt())
    denom = pot.exp() + d*(Decimal('2.')* PI**Decimal('3.') - x)
    return numer/denom

def busca(a,b,c,d,target):
    left = Decimal('0.')
    right = Decimal('50.')
    meio = (left+right)/Decimal('2.')
    while True:
      atual = calcular(a,b,c,d,meio)
      if abs(atual-target) <= Decimal('1e-32'):
        break
      if atual > target:
        right = meio
      else:
        left = meio
      meio = (left+right)/Decimal('2.')
    return meio


def bestRoute(a,b,c,d,planetas,mini_dist,max_dist):
  best = ['',0]
  for p in planetas.keys():
    if planetas[p] < mini_dist or planetas[p] > max_dist:
      continue
    print('Teste:', p, planetas[p])
    combustivel = busca(a,b,c,d,planetas[p])
    if combustivel > best[1]:
      best[0] = p
      best[1] = combustivel  
  return (best[0], best[1])

def main():
  n = int(input())
  if n == 0:
    return
  planetas = {}
  for _ in range(n):
    nome, dist = input(), Decimal(input())
    planetas[nome] = dist
  a,b,c,d =  Decimal(input()),Decimal(input()),Decimal(input()),Decimal(input())
  #do stuff
  mini_dist = calcular(a,b,c,d,Decimal('0.'))
  max_dist = calcular(a,b,c,d,Decimal('50.'))
  nome,comb =(bestRoute(a,b,c,d,planetas,mini_dist,max_dist))
  print(nome)
  print(f'{comb:.28f}')
  #
  main()

main()
